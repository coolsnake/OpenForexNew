<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="panel1.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonSell.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAK7wAA
        Cu8BfXaKSAAAA8NJREFUSEu1lWtMk2cUx7fvS/xG3ieIHS29UMoAgcYpqA2zlQmOm1bkIoRpAUFbZavL
        wHnFQTSTGSYLkBA7pwaZuqifJk6ksuAMbgLalWovtrTQlo5LRaD+95TEZG4g2oQ3+X9585zzy/k/55zn
        XQDvLOrnByymZpMHBQX9T1ohE9IaxtgvcxhnG48ZuUjV6hefcVINXeAxjjYuYzvLZ2xzxfv/zbozH8B/
        oEMQBodCCbtSDVvpHlhLdsGSr4AxJQsD4rW4xRahlUUQMOAWlw3n/sMw71RBL9uIh+KV6IuIRq8gEv2C
        D/ALR4g2dnDggNv8MLiO1sCYVwjditXQrZJQSAL6l6+ALioeN8Jj8BMnJHCAViiAu/YkLNtLMCCRQi+R
        4a/EJDz6cA30FHQjWoxLXFbggK5IEdzfnoa1TIkn61NhoBr4KBn6NetgoKD2+ARc4b4fOKA7Jgqe7xph
        U6lh2pgJI9Xjjz+BQZYKc1Iy2hMk+Jk2QsCX/PvyGIw1tcCuroQlKxtmKlP6ZjxJzYAlOQ03qWVXBdzA
        AfdiYzFx5kcM7T8Ia04hLDkFsMhzYcmUw5qxCTelG3BNJFgYMBpMlphYpKGfxWjucxnNbzxGcz2cudwt
        ioD37IXZThosKoatUIGneUWwbN0G+5ZctFO7rgh5uBbOXOrgM5puqrs0/k8OU/84krz3yqBZWCSpNzZu
        wtfQjMmGJnibWzDW0Ajv1etwHf8GQyXlsBeXYfDTElgLFBikIC2166k8D31pm9C1IZ0qA7/yQ8cesJnE
        OSfZuIzIesVxz6brGzF+5Gt4qmsxWlcP96FqOJWfY3j3Xjh27oZdUT5bkaNwB4bzi9CTmY3b6XK080LH
        H3IYyctLn3NVmEJJal+8+PnU982YoAAPneSRyoNw76uCq2IfnKrPMLRLhWFakau4HA9yC9CZnY+OcO4z
        HYeR/ruj5t1F1K5M3aqEqenGM/DWnsDfh6vh+eooRr48AJe6Cu4KNTx71ejfUYrOIgU6hYJJA4+k/Ldd
        X7vszGwi1yeunva1/ADviTqMVtdQ0DGM0orGKw/hkbIC2jIV7oginpvYJG2uWVhwmw4uIzmGtUkzPs05
        TNadwkTNcUxS2wxfVEFLK+iKip6yhpKsgAfNH2hjkQKzVDbz4nwbfKebYD5yDNrKA7gbGzft4JAt8yV/
        o/fgZbAjmCh6JOt8f5w8BS216t7KxBlnCNn2uuRvBfAf9iwl5fdT0l70SNf7RpaS7Qslf2uAP8BMyB4j
        CS59k+SvABb90V9MwD/mvJ536aaTTAAAAABJRU5ErkJggg==
</value>
  </data>
</root>