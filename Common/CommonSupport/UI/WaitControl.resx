<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timerUI.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAK7wAA
        Cu8BfXaKSAAABDpJREFUSEvllH1M1HUcxz9n7CBA5MkpDbUZxoEamYg0aiPWKpkP6daapYxaYqXYCuiB
        EMki9QAJSHkYWkQkzlyAMG6XSY4C48EBxRDveDq4AOF3P353x/N57z5EXdkyNf2nddt7399+u71en+/n
        +/38iP43v7p02vZNqkPH+UxXoSyBjqiUJL9jm2/Pp5DGwhWW0StVGB1UQ3vuBZw/QAfuiAAZNOfrNGow
        dH0OsbsQho48GPUFqMm5d7whg3xuW1KXTS+1qzZB0p2AoD0KQZMGoeMQBlvjUJVMJbclEM/QvLoc+wGp
        t4irz4XUk4WRbiULknhNwMXildYfDtPj/1rSkkNpvRde5eqPw1Abitp8e1TnyjHR5A9D52sQO3dA9R79
        mPIx2d2yRF9Miqaieyal3gJIrTvw5laCnaM33Bb4Ye/O+bjauRYjPdtwSb0K5xJp1y0LmnOp8kprEoSu
        dIw1hyJklQsWLVkKf/+VeCRkNaDzgqFrI0z9T0GdJh/6Poncb1rSWUjr28rWWsXuLAxr9mO67TFsCHXD
        fcv8EPDgamwKXwP0L+RzCYXU9zD0TQpUvEuZNyWYyiB5dSZdFjsP/wofvvwWJjueRvJuF/j4BuChwBAo
        431hHViGEV0gjH3LMSH6ovqY49R3SvK/oaT+CMVpq7ZA7Eph+NucaEjdUXxj7OCjCGJBGOrKPTA2+AAk
        vS+M/UtgHloI04AHyuNJ9Y+Cn3LIqyZ7riTpjjJ4H+d1ThSGtZFAnzsCA4MRFLwOEBwg/axgqDfDPTEu
        OMMyLkfLGZlVnUgbriupTaNP+hrfgNCp/K363dymSB6wZ2HtD0By/P2IfjkYGHVl+CKGu2PMcDcmjHMw
        NUYACKf2UnvN9r/5TrVkU1D9Z4qrki6P4UmcGIbv5Ml9jgdrI8/CE4DoCovkyODFHG6TwYHhMkxNECzT
        s4KeFsIX0RR7zS5AJCtRUq2g+QgGbSrDEzh7WPAiV/8MxJ5wGNuW42KBHJdOO/ANcmG4kw1utRCsDJ8R
        zKRcSSNFUbTAJjmVTBHNpeHWEZ5YQfPhbHs0u/g5gqvfzDflSVzIJzi7KbB46aPQnnXB1KgdhyufuhY+
        IzANE7IjKdcmKE2kRpO+mGFZDH2fBXEseIWrf362PX1hqP9UBk+vNfBbsQ4t33pgekyGaW4NrH9U/vsO
        ZtbSg2SyCSoPuelHB0sZmM4CvvuaWF65/9qt/M1ZD1EXCui90VDmjPqznsCEDJN8qJaZ1lxH8OV+MtgE
        J2MpT1cfD5P+OIy6FB6gBF73wNgbwe82wzwQhvHhQFjMPgzn79Akn8Ofev7X544GQtZ2+sAmKIghp5Mx
        dKxS6SGoU+eb1akeZlXqPM5cjhPH0axKszdXpspNFUo7sSJFJlYoiVcS+UDFkoMklCTT0FecE++QJiuC
        9p3eQnfdcKr/E3/4BUSHMdOgHhW6AAAAAElFTkSuQmCC
</value>
  </data>
</root>